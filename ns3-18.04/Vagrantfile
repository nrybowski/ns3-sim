# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/ubuntu1804"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  config.vm.provider "libvirt" do |lb|
    lb.memory = "4096"
    lb.cpus = 4
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    set -xe
    USER="su - vagrant -c"
    apt-get update && apt-get -y upgrade
    apt-get install -y g++ python3 git tar python3-pip cmake mercurial \
      python3-gi-cairo gir1.2-gtk-3.0 libc6 libc6-dbg libpcap-dev \
      python3-gi python-gi python3-pygraphviz python-pygraphviz htop \
      python-gi-cairo g++-multilib qt5-default pkg-config libssl-dev
    $USER "pip3 install distro"
    if [[ ! -d ns-allinone-3.34 ]]
    then
      $USER "wget https://www.nsnam.org/release/ns-allinone-3.34.tar.bz2"
      $USER "tar xjf ns-allinone-3.34.tar.bz2"
    fi
    $USER "cd ns-allinone-3.34 && ./build.py --enable-examples --enable-tests"
    export PATH=$PATH:`pwd`/build/bin:`pwd`/build/bin_dce
    export PYTHONPATH=`pwd`/build/lib${PYTHONPATH:+:$PYTHONPATH}
    export LD_LIBRARY_PATH=`pwd`/build/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
    export DCE_PATH=`pwd`/build/bin_dce:`pwd`/build/sbin
    $USER "cd ns-allinone-3.34/bake && ./bake.py configure -e dce-ns3-dev && ./bake.py download && ./bake.py build"
    #$USER "./bake.py check"
    #$USER "./bake.py show"
    #$USER "./bake.py download"
    $USER "./bake.py build"
  SHELL
end
